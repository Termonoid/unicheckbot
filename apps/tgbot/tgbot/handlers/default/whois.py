from aiogram.types import Message
import whois

whois_help_message = """
‚ùì –í–µ—Ä–Ω—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–º–µ–Ω–µ.

 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/whois <–¥–æ–º–µ–Ω>`
"""

no_domain_text = """
‚ùó–ù–µ —É–∫–∞–∑–∞–Ω –¥–æ–º–µ–Ω –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π/–Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–æ–º–µ–Ω.

–ù–∞–ø–∏—à–∏—Ç–µ /whois —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø—Ä–∞–≤–∫—É.
"""


def create_whois_message(domain: str) -> str:
    domain_info = whois.whois(domain)
    if domain_info.get("domain_name") is None:
        return no_domain_text
    message = f"\nüìù–ò–º—è: {domain_info.get('domain_name')}" \
              f"\nüë§–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {domain_info.get('registrar')}" \
              f"\nüìÖ–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {domain_info.get('creation_date')}" \
              f"\nüìÖ–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {domain_info.get('expiration_date')}" \
              f"\nüìåNS: {' '.join(domain_info.get('name_servers'))}"
    return message


async def whois_cmd(msg: Message):
    args = msg.text.split(" ")
    if len(args) == 1:
        return await msg.answer(no_domain_text)
    if len(args) >= 2:
        host = args[1]
        await msg.answer(create_whois_message(host))
